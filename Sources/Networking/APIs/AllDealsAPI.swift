//
// AllDealsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AllDealsAPI {

    /**

     - parameter storeID: (query) Comma separated list of store ID&#39;s to filter on. If not set, all stores will be shown. (optional)
     - parameter pageNumber: (query) The requested pagt number, value is 0 indexed. The X-Total-Page-Count HTTP header on the response will give you the max value for this parameter. (optional)
     - parameter pageSize: (query) The number of deals per page, max value of 60 (optional)
     - parameter sortBy: (query) Default Deal Rating Criteria to sort the list by, possible values - Deal Rating, Title, Savings, Price, Metacritic, Reviews, Release, Store, Recent (optional)
     - parameter desc: (query) Determines sort direction (optional)
     - parameter onSale: (query) Flag to include only games that are currently on sale (optional)
     - returns: [Deals]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func dealsGet(storeID: String? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, desc: Bool? = nil, onSale: String? = nil) async throws -> [Deals] {
        return try await dealsGetWithRequestBuilder(storeID: storeID, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, desc: desc, onSale: onSale).execute().body
    }

    /**
     - GET /deals
     - parameter storeID: (query) Comma separated list of store ID&#39;s to filter on. If not set, all stores will be shown. (optional)
     - parameter pageNumber: (query) The requested pagt number, value is 0 indexed. The X-Total-Page-Count HTTP header on the response will give you the max value for this parameter. (optional)
     - parameter pageSize: (query) The number of deals per page, max value of 60 (optional)
     - parameter sortBy: (query) Default Deal Rating Criteria to sort the list by, possible values - Deal Rating, Title, Savings, Price, Metacritic, Reviews, Release, Store, Recent (optional)
     - parameter desc: (query) Determines sort direction (optional)
     - parameter onSale: (query) Flag to include only games that are currently on sale (optional)
     - returns: RequestBuilder<[Deals]> 
     */
    open class func dealsGetWithRequestBuilder(storeID: String? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, sortBy: String? = nil, desc: Bool? = nil, onSale: String? = nil) -> RequestBuilder<[Deals]> {
        let localVariablePath = "/deals"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "storeID": (wrappedValue: storeID?.encodeToJSON(), isExplode: true),
            "pageNumber": (wrappedValue: pageNumber?.encodeToJSON(), isExplode: true),
            "pageSize": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "sortBy": (wrappedValue: sortBy?.encodeToJSON(), isExplode: true),
            "desc": (wrappedValue: desc?.encodeToJSON(), isExplode: true),
            "onSale": (wrappedValue: onSale?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Deals]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
